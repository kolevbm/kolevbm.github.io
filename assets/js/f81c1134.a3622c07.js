"use strict";(self.webpackChunktaking_notes=self.webpackChunktaking_notes||[]).push([[8130],{7735:e=>{e.exports=JSON.parse('{"archive":{"blogPosts":[{"id":"docker-wg-firefly-iii","metadata":{"permalink":"/blog/docker-wg-firefly-iii","source":"@site/blog/2024-12-31-docker-wg-firefly-iii/index.md","title":"Docker compose for Firefly III with WireGuard VPN client","description":"\u0417\u0430\u043f\u0438\u0441\u0430\u0445 \u0441\u0438 firefly-iii \u0432 docker \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u043d\u0430 \u043b\u043e\u043a\u0430\u043b\u0435\u043d \u0441\u044a\u0440\u0432\u044a\u0440 Raspberry Pi5, \u043d\u043e \u0438\u0441\u043a\u0430\u0445 \u0434\u0430 \u0438\u043c\u0430\u043c \u0434\u043e\u0441\u0442\u044a\u043f \u0434\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435\u0442\u043e \u043d\u0430\u0432\u0441\u044f\u043a\u044a\u0434\u0435, \u0430 \u043d\u0435 \u0441\u0430\u043c\u043e \u0432 \u0434\u043e\u043c\u0430\u0448\u043d\u0430\u0442\u0430 \u043c\u0440\u0435\u0436\u0430.","date":"2024-12-31T00:00:00.000Z","tags":[{"inline":true,"label":"docker","permalink":"/blog/tags/docker"},{"inline":true,"label":"finance","permalink":"/blog/tags/finance"},{"inline":true,"label":"firefly","permalink":"/blog/tags/firefly"},{"inline":true,"label":"wg","permalink":"/blog/tags/wg"},{"inline":true,"label":"wireguard","permalink":"/blog/tags/wireguard"}],"readingTime":4.635,"hasTruncateMarker":true,"authors":[{"name":"Boris Kolev","title":"owner","key":"boris","page":null}],"frontMatter":{"slug":"docker-wg-firefly-iii","title":"Docker compose for Firefly III with WireGuard VPN client","authors":["boris"],"tags":["docker","finance","firefly","wg","wireguard"]},"unlisted":false,"nextItem":{"title":"Regex MDbus LOG file with node.js","permalink":"/blog/regex"}},"content":"\u0417\u0430\u043f\u0438\u0441\u0430\u0445 \u0441\u0438 [firefly-iii](https://www.firefly-iii.org/) \u0432 docker \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u043d\u0430 \u043b\u043e\u043a\u0430\u043b\u0435\u043d \u0441\u044a\u0440\u0432\u044a\u0440 Raspberry Pi5, \u043d\u043e \u0438\u0441\u043a\u0430\u0445 \u0434\u0430 \u0438\u043c\u0430\u043c \u0434\u043e\u0441\u0442\u044a\u043f \u0434\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435\u0442\u043e \u043d\u0430\u0432\u0441\u044f\u043a\u044a\u0434\u0435, \u0430 \u043d\u0435 \u0441\u0430\u043c\u043e \u0432 \u0434\u043e\u043c\u0430\u0448\u043d\u0430\u0442\u0430 \u043c\u0440\u0435\u0436\u0430.\\n\u0417\u0430 \u0446\u0435\u043b\u0442\u0430 \u043d\u0430\u043f\u0440\u0430\u0432\u0438\u0445 docker-compose \u0444\u0430\u0439\u043b, \u043a\u043e\u0439\u0442\u043e:\\n\\n- \u0441\u044a\u0437\u0434\u0430\u0432\u0430 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0441 [firefly-iii](https://www.firefly-iii.org/) \u0438 \u0434\u0440\u0443\u0433\u0438\u0442\u0435 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u0438 \u0437\u0430 \u043d\u0435\u0433\u043e \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\u0438\\n- \u0441\u044a\u0437\u0434\u0430\u0432\u0430 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0441 [linuxserver/wireguard](https://github.com/linuxserver/docker-wireguard) VPN \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043d \u043a\u0430\u0442\u043e \u043a\u043b\u0438\u0435\u043d\u0442, \u043a\u043e\u0439\u0442\u043e \u0441\u0435 \u0441\u0432\u044a\u0440\u0437\u0432\u0430 \u043a\u044a\u043c \u043b\u0438\u0447\u0435\u043d wireguard VPN \u0441\u044a\u0440\u0432\u044a\u0440 \u0438\u043d\u0441\u0442\u0430\u043b\u0438\u0440\u0430\u043d \u043d\u0430 Mikrotik \u0440\u0443\u0442\u0435\u0440 \u0432 \u0434\u0440\u0443\u0433\u0430 \u043c\u0440\u0435\u0436\u0430 \u0441\u044a\u0441 \u0441\u0442\u0430\u0442\u0438\u0447\u0435\u043d \u043f\u0443\u0431\u043b\u0438\u0447\u0435\u043d \u0430\u0434\u0440\u0435\u0441.\\n- \u0441\u0432\u044a\u0440\u0437\u0432\u0430 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\u0438\u0442\u0435 \u0432 \u043e\u0431\u0449\u0430 \u0438\u0437\u043e\u043b\u0438\u0440\u0430\u043d\u0430 \u043c\u0440\u0435\u0436\u0430 \u0441\u044a\u0441 \u0441\u0442\u0430\u0442\u0438\u0447\u043d\u0438 IP \u0430\u0434\u0440\u0435\u0441\u0438.\\n- \u043f\u0440\u0435\u043d\u0430\u0441\u043e\u0447\u0432\u0430\u043d\u0435 \u043d\u0430 \u043f\u043e\u0440\u0442\u043e\u0432\u0435 \u043e\u0442 VPN \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\u0430 \u043a\u044a\u043c \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\u0430 \u0441 _firefly-iii_.\\n\\n\u041d\u043e \u0440\u0430\u0437\u0431\u0438\u0440\u0430 \u0441\u0435 \u0442\u043e\u0432\u0430 \u043d\u0435 \u0431\u0435\u0448\u0435 \u0434\u043e\u0441\u0442\u0430\u0442\u044a\u0447\u043d\u043e, \u0437\u0430 \u0434\u0430 \u0438\u043c\u0430\u043c \u0432\u0440\u044a\u0437\u043a\u0430 \u043a\u044a\u043c _firefly-iii_ \u0438\u0437\u0432\u044a\u043d \u043b\u043e\u043a\u0430\u043b\u043d\u0430 \u043c\u0440\u0435\u0436\u0430 \u0432 \u0434\u043e\u043c\u0430 \u043c\u0438.\\n\x3c!-- truncate --\x3e\\n\\n## WireGuard VPN\\n\\n\u0417\u0430 \u0446\u0435\u043b\u0442\u0430 \u0442\u0440\u044f\u0431\u0432\u0430\u0448\u0435 \u0434\u0430 \u0441\u0435 \u043d\u0430\u043f\u0440\u0430\u0432\u044f\u0442 \u043f\u0440\u0435\u043d\u0430\u0441\u043e\u0447\u0432\u0430\u043d\u0438\u044f \u043d\u0430 \u043f\u043e\u0440\u0442\u043e\u0432\u0435 \u0432 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\u0430 \u0441 _wireguard_. \u0422\u0435\u0437\u0438 \u043f\u0440\u0435\u043d\u0430\u0441\u043e\u0447\u0432\u0430\u043d\u0438\u044f \u043b\u0435\u0441\u043d\u043e \u043c\u043e\u0433\u0430\u0442 \u0434\u0430 \u0441\u0435 \u0434\u043e\u0431\u0430\u0432\u044f\u0442 \u0438 \u043f\u0440\u0435\u0437\\n\u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u043e\u043d\u043d\u0438\u044f \u0444\u0430\u0439\u043b `wg0.conf` \u0447\u0440\u0435\u0437 `PostUp` \u0438 `PostDown` \u043a\u043e\u043c\u0430\u043d\u0434\u0438.\\n\\n### \u0421\u0442\u044a\u043f\u043a\u0430 1 \u0433\u0435\u043d\u0435\u0440\u0438\u0440\u0430\u043d\u0435 \u043d\u0430 \u043a\u043b\u044e\u0447\u043e\u0432\u0435 \u0437\u0430 _wireguard_ \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\u0430\\n\\n\u0417\u0430 `linux` \u0434\u0438\u0441\u0442\u0440\u0438\u0431\u0443\u0446\u0438\u0438, \u043a\u043e\u0438\u0442\u043e \u0441\u0430 \u0441 `kernel` \u0432\u0435\u0440\u0441\u0438\u044f `5.6+` \u043c\u043e\u0436\u0435 \u0434\u0430 \u0441\u0435 \u0438\u0437\u043f\u043e\u043b\u0437\u0432\u0430 `wireguard` \u043c\u043e\u0434\u0443\u043b\u0430, \u043a\u043e\u0439\u0442\u043e \u0435 \u0432\u043a\u043b\u044e\u0447\u0435\u043d \u0432 \u044f\u0434\u0440\u043e\u0442\u043e \u043f\u043e \u043f\u043e\u0434\u0440\u0430\u0437\u0431\u0438\u0440\u0430\u043d\u0435. \u041d\u044f\u043c\u0430 \u043d\u0443\u0436\u0434\u0430 \u043e\u0442 \u0438\u043d\u0441\u0442\u0430\u043b\u0438\u0440\u0430\u043d\u0435 \u043d\u0430 `wireguard-tools` \u0438\u043b\u0438 \u0434\u0440\u0443\u0433\u0438 \u043f\u0430\u043a\u0435\u0442\u0438.\\n\\n```bash title=\\"Generate keys for wireguard container\\"\\n wg genkey | tee privatekey | wg pubkey > publickey\\n```\\n\\n:::important\\n\u0442\u0435\u0437\u0438 \u0444\u0430\u0439\u043b\u043e\u0432\u0435 \u0442\u0440\u044f\u0431\u0432\u0430 \u0434\u0430 \u0441\u0430 \u0432 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044f\u0442\u0430 `./config` \u043a\u043e\u044f\u0442\u043e \u043f\u043e\u0441\u043b\u0435 \u0449\u0435 \u0441\u0435 \u043c\u0430\u043f\u043d\u0435 \u043a\u044a\u043c \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\u0430 \u0441 _wireguard_\\n:::\\n\\n:::note\\nThe tee command in Linux reads input from standard input (stdin) and writes it to both standard output (stdout) and one or more specified files. It essentially \\"splits\\" the output, allowing it to be displayed on the terminal and saved to a file simultaneously.\\n:::\\n\\n#### \u0421\u0442\u044a\u043f\u043a\u0430 1.1  \u0437\u0430\u0434\u0430\u0432\u0430\u043d\u0435 \u043d\u0430 \u043f\u0440\u0430\u0432\u0430 \u0437\u0430 private key \u0444\u0430\u0439\u043b\u0430\\n\\n```bash title=\\"Set permissions for the private key file\\"\\nchmod 600 privatekey\\n```\\n4+2 = 6 (read and write for the owner)\\n0 (no permissions for the group)\\n0 (no permissions for others)\\n\\n### \u0421\u0442\u044a\u043f\u043a\u0430 2 \u0441\u044a\u0437\u0434\u0430\u0432\u0430\u043d\u0435 \u043d\u0430 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u043e\u043d\u0435\u043d \u0444\u0430\u0439\u043b \u0437\u0430 _wireguard_ \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\u0430\\n\\n```conf title=\\"wg0.conf\\"\\n[Interface]\\nPrivateKey = <container_private_key>\\nAddress = 192.168.100.4/24\\nDNS = 192.168.100.1\\n\\nPostUp = iptables -t nat -A PREROUTING -i %i -p tcp --dport 80 -j DNAT --to-destination 192.168.200.4:8080; iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE\\nPostDown = iptables -t nat -D PREROUTING -i %i -p tcp --dport 80 -j DNAT --to-destination 192.168.200.4:8080; iptables -t nat -D POSTROUTING -o eth0 -j MASQUERADE\\n\\n[Peer]\\nPublicKey = <server_public_key>\\nAllowedIPs = 0.0.0.0/0\\nEndpoint = <server_ip>:<server_port>\\nPersistentKeepalive = 50\\n```\\n - \u0432 \u0441\u043b\u0443\u0447\u0430\u044f \u043f\u0440\u0435\u043d\u0430\u0441\u043e\u0447\u0432\u0430\u043c\u0435 192.168.100.4:80 _wireguard_ (wg0_interfece) \u043a\u044a\u043c 192.168.200.4:8080 _firefly-iii_:\\n`iptables -t nat -A PREROUTING -i %i -p tcp --dport 80 -j DNAT --to-destination 192.168.200.4:8080`\\n - \u0441\u043b\u0435\u0434 \u0442\u043e\u0432\u0430 \u043c\u0430\u0441\u043a\u0438\u0440\u0430\u043c\u0435 \u043f\u0430\u043a\u0435\u0442\u0438\u0442\u0435, \u043a\u043e\u0438\u0442\u043e \u043f\u0440\u0435\u043c\u0438\u043d\u0430\u0432\u0430\u0442 \u043f\u0440\u0435\u0437 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430 `eth0` \u043d\u0430 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\u0430 \u0441 _wireguard_:\\n`iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE`\\n\\n > \u0438\u0437\u043f\u043e\u043b\u0437\u0432\u0430\u043c\u0435 `%i` \u0437\u0430 \u0438\u043c\u0435\u0442\u043e \u043d\u0430 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430, \u043a\u043e\u0435\u0442\u043e \u0449\u0435 \u0431\u044a\u0434\u0435 \u0437\u0430\u043c\u0435\u043d\u0435\u043d\u043e \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u043d\u043e \u043e\u0442 _wireguard_.\\n\\n:::tip\\n\u0442\u0440\u044f\u0431\u0432\u0430 \u0434\u0430 \u0441\u0435 \u0434\u043e\u0431\u0430\u0432\u0438 \u0432 `/etc/sysctl.conf`: \\n`net.ipv4.ip_forward=1` \u0437\u0430 \u0434\u0430 \u043f\u043e\u0437\u0432\u0432\u043e\u043b\u0438\u043c \u043f\u0440\u0435\u043d\u0430\u0441\u043e\u0447\u0432\u0430\u043d\u0435\u0442\u043e \u043d\u0430 \u043f\u043e\u0440\u0442\u043e\u0432\u0435, \u0432 \u0441\u043b\u0443\u0447\u0430\u044f \u0442\u043e\u0432\u0430 \u0441\u0435 \u043f\u0440\u0430\u0432\u0438 \u0432 `docker-compose` \u0444\u0430\u0439\u043ba\\n:::\\n\\n### \u0421\u0442\u044a\u043f\u043a\u0430 3 \u0434\u043e\u0431\u0430\u0432\u044f\u043d\u0435 \u043d\u0430 \u043d\u043e\u0432 \u043f\u0438\u044a\u0440 peer \u043a\u044a\u043c _wireguard_ \u0441\u044a\u0440\u0432\u044a\u0440\u0430\\n\\n\u0422\u0435\u0437\u0438 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0432 \u043c\u043e\u044f \u0441\u043b\u0443\u0447\u0430\u0439 \u0441\u0430 \u043f\u0440\u0435\u0437 \u043c\u0438\u043a\u043e\u0442\u0440\u0438\u043a \u0440\u0443\u0442\u0435\u0440\u0430, \u043a\u043e\u0438\u0442\u043e \u043d\u044f\u043c\u0430 \u0434\u0430 \u043e\u043f\u0438\u0441\u0432\u0430\u043c. \u0422\u0443\u043a \u043c\u043e\u0436\u0435\u0442\u0435 \u0434\u0430 \u043d\u0430\u043c\u0435\u0440\u0438\u0442\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u0437\u0430 \u0442\u043e\u0432\u0430 \u043a\u0430\u043a \u0441\u0435 \u043f\u0440\u0430\u0432\u0438: [WireGuard VPN Server on MikroTik](https://help.mikrotik.com/docs/spaces/ROS/pages/69664792/WireGuard)\\n\\n\\n### \u0421\u0442\u044a\u043f\u043a\u0430 4 \u0441\u0442\u0430\u0440\u0442\u0438\u0440\u0430\u043d\u0435 \u043d\u0430 _wireguard_ \u0442\u0435\u0441\u0442\u043e\u0432\u0438 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\\n\\n\u0426\u0435\u043b\u0442\u0430 \u043d\u0430 \u0442\u0430\u0437\u0438 \u0441\u0442\u044a\u043f\u043a\u0430 \u0435 \u0434\u0430 \u0441\u0435 \u0442\u0435\u0441\u0442\u0432\u0430 \u0434\u0430\u043b\u0438 _wireguard_ \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\u0430 \u043c\u043e\u0436\u0435 \u0434\u0430 \u0441\u0435 \u0441\u0432\u044a\u0440\u0436\u0435 \u043a\u044a\u043c _wireguard_ \u0441\u044a\u0440\u0432\u044a\u0440\u0430.\\n\\n```yaml title=\\"wg-test-compose.yml\\"\\nservices:\\n  wireguard:\\n    image: lscr.io/linuxserver/wireguard:latest         #should retrieve the correct image for your arch\\n    container_name: wireguard\\n    cap_add:\\n      - NET_ADMIN\\n      - SYS_MODULE #optional Some hosts may not load the iptables kernel modules by default\\n    environment:\\n      - PUID=1000\\n      - PGID=1000\\n      - TZ=Etc/UTC\\n      #- SERVERURL=wireguard.domain.com #optional\\n      #- SERVERPORT=51820 #optional\\n      #- PEERS=1 #optional\\n      #- PEERDNS=auto #optional\\n      #- INTERNAL_SUBNET=10.13.13.0 #optional\\n      #- ALLOWEDIPS=0.0.0.0/0 #optional\\n      #- PERSISTENTKEEPALIVE_PEERS= #optional\\n      - LOG_CONFS=true #optional\\n    volumes:\\n      - ./config:/config\\n      - /lib/modules:/lib/modules #optional if SYS_MODULE is set\\n    ports:\\n      - 51820:51820/udp\\n    sysctls:\\n      - net.ipv4.conf.all.src_valid_mark=1\\n      - net.ipv4.ip_forward=1\\n    restart: unless-stopped\\n\\n```\\n\u043c\u043e\u0436\u0435 \u0434\u0430 \u0441\u0442\u0430\u0440\u0442\u0438\u0440\u0430\u043c\u0435 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\u0430 \u0441\\n`docker compose -f wg-test-compose.yml up `\\n\\n:::tip\\n\u043f\u0440\u0438 \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0441\u0442\u0430\u0440\u0442\u0438\u0440\u0430\u043d \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u043c\u043e\u0436\u0435 \u0434\u0430 \u0432\u043b\u0435\u0437\u0435\u0442\u0435 \u0432 \u043d\u0435\u0433\u043e \u0441 `docker exec -it wireguard /bin/bash` \u0438 \u0434\u0430 \u043f\u0438\u043d\u0433\u043d\u0435\u0442\u0435 wireguard \u0441\u044a\u0440\u0432\u044a\u0440\u0430 \u0441 `ping <server_ip>`  \u0438\u043b\u0438 \u0434\u0440\u0443\u0433\u0430 \u043c\u0430\u0448\u0438\u043d\u0430 \u0432 \u043c\u0440\u0435\u0436\u0430\u0442\u0430 \u043d\u0430 \u0441\u044a\u0440\u0432\u044a\u0440\u0430.\\n:::\\n\u0441\u043b\u0435\u0434 \u043a\u0430\u0442\u043e \u0432\u0441\u0438\u0447\u043a\u043e \u0440\u0430\u0431\u043e\u0442\u0438 \u043c\u043e\u0436\u0435 \u0434\u0430 \u0438\u0437\u0442\u0440\u0438\u0435\u0442\u0435 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\u0430 \u0441 `docker compose -f wg-test-compose.yml down` \u0438 \u0434\u0430 \u043f\u0440\u0435\u043c\u0438\u043d\u0435\u0442\u0435 \u043a\u044a\u043c \u0441\u043b\u0435\u0434\u0432\u0430\u0449\u0438\u044f \u0435\u0442\u0430\u043f\\n\\n## Docker compose\\n\\n\u0417\u0430 \u0434\u043e\u043f\u044a\u043b\u043d\u0438\u0442\u0435\u043b\u043d\u0430 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043a\u0430\u043a \u0441\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u0432\u0430 _firefly-iii_ \u0432 docker \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u043c\u043e\u0436\u0435 \u0434\u0430 \u043f\u0440\u043e\u0447\u0435\u0442\u0435\u0442\u0435 \u0442\u0443\u043a: [Firefly III Docker](https://docs.firefly-iii.org/how-to/firefly-iii/installation/docker/)\\n\\n\u0426\u0435\u043b\u0438\u044f\u0442 docker-compose \u0444\u0430\u0439\u043b \u0438\u0437\u0433\u043b\u0435\u0436\u0434\u0430 \u0442\u0430\u043a\u0430:\\n\\n```yaml title=\\"docker-compose.yml\\"\\nservices:\\n  wireguard:\\n    image: lscr.io/linuxserver/wireguard:latest         #should retrieve the correct image for your arch\\n    container_name: wireguard\\n    networks:\\n      wg_network:\\n        ipv4_address: 192.168.200.2\\n    cap_add:\\n      - NET_ADMIN\\n      - SYS_MODULE #optional Some hosts may not load the iptables kernel modules by default\\n    environment:\\n      - PUID=1000\\n      - PGID=1000\\n      - TZ=Etc/UTC\\n      #- SERVERURL=wireguard.domain.com #optional\\n      #- SERVERPORT=51820 #optional\\n      #- PEERS=1 #optional\\n      #- PEERDNS=auto #optional\\n      #- INTERNAL_SUBNET=10.13.13.0 #optional\\n      #- ALLOWEDIPS=0.0.0.0/0 #optional\\n      #- PERSISTENTKEEPALIVE_PEERS= #optional\\n      - LOG_CONFS=true #optional\\n    volumes:\\n      - ./config:/config\\n      - /lib/modules:/lib/modules #optional if SYS_MODULE is set\\n    ports:\\n      - 51820:51820/udp\\n    sysctls:\\n      - net.ipv4.conf.all.src_valid_mark=1\\n      - net.ipv4.ip_forward=1\\n    restart: unless-stopped\\n\\n  app:\\n    image: fireflyiii/core:latest\\n    hostname: app\\n    container_name: firefly_iii_core\\n    restart: always\\n    volumes:\\n      - firefly_iii_upload:/var/www/html/storage/upload\\n    env_file: .env\\n    networks:\\n      wg_network:\\n        ipv4_address: 192.168.200.4\\n    ports:\\n      - 85:8080\\n    depends_on:\\n      - db\\n  db:\\n    image: mariadb:lts\\n    hostname: db\\n    container_name: firefly_iii_db\\n    restart: always\\n    env_file: .db.env\\n    networks:\\n      wg_network:\\n        ipv4_address: 192.168.200.3\\n    volumes:\\n      - firefly_iii_db:/var/lib/mysql\\n  cron:\\n    #\\n    # To make this work, set STATIC_CRON_TOKEN in your .env file or as an environment variable and replace REPLACEME below\\n    # The STATIC_CRON_TOKEN must be *exactly* 32 characters long\\n    #\\n    image: alpine\\n    restart: always\\n    container_name: firefly_iii_cron\\n    command: sh -c \\"echo \\\\\\"0 3 * * * wget -qO- http://app:8080/api/v1/cron/REPLACEME;echo\\\\\\" | crontab - && crond -f -L /dev/stdout\\"\\n    networks:\\n      wg_network:\\n        ipv4_address: 192.168.200.5\\n\\nvolumes:\\n   firefly_iii_upload:\\n   firefly_iii_db:\\n\\nnetworks:\\n  wg_network:\\n    driver: bridge\\n    ipam:\\n      config:\\n        - subnet: 192.168.200.0/24\\n```"},{"id":"regex","metadata":{"permalink":"/blog/regex","source":"@site/blog/2024-09-24-basic-nodejs-regex-formatter/index.mdx","title":"Regex MDbus LOG file with node.js","description":"Open a file, perform regex and generate output file","date":"2024-09-24T00:00:00.000Z","tags":[{"inline":false,"label":"regex","permalink":"/blog/tags/regex","description":"regex tag description"},{"inline":false,"label":"node","permalink":"/blog/tags/node"},{"inline":false,"label":"javascript","permalink":"/blog/tags/js"},{"inline":true,"label":"modbus","permalink":"/blog/tags/modbus"}],"readingTime":2.155,"hasTruncateMarker":true,"authors":[{"name":"Boris Kolev","title":"owner","key":"boris","page":null}],"frontMatter":{"slug":"regex","title":"Regex MDbus LOG file with node.js","authors":["boris"],"tags":["regex","node","js","modbus"]},"unlisted":false,"prevItem":{"title":"Docker compose for Firefly III with WireGuard VPN client","permalink":"/blog/docker-wg-firefly-iii"},"nextItem":{"title":"Greetings!","permalink":"/blog/greetings"}},"content":"Open a file, perform regex and generate output file\\n\\n\x3c!-- truncate --\x3e\\n\\nCreate a `*.js` file dor exapmle `formatter.js` , *formatter* because this will format [beckhoff.log](./beckhoff.LOG) file from MDBus session to our needs.\\n\\n\\n- will filter for slaveID 01 and func type 03 with `pattern1`, will add new line `\\\\n` and carriage return `\\\\r` before the first match group `$1`, which is (`pattern1`)\\n- will remove the date/time stamp on `pattern2`,\\n- additional formatting with the 3rd pattern\\n\\n```js title=\\"formatter.js\\"\\nconst fs = require(\\"fs\\");\\n\\n// Function to process the file\\nfunction processFile(inputFile, outputFile) {\\n  // Read the input file as a string\\n  fs.readFile(inputFile, \\"utf8\\", (err, data) => {\\n    if (err) {\\n      console.error(\\"Error reading the input file:\\", err);\\n      return;\\n    }\\n\\n    // Find the pattern \\"01 03 \\" and ensure a newline before each occurrence\\n    const pattern1 = \\"01 03 \\";\\n    const pattern2 = /\\\\d{2} \\\\d{2}:\\\\d{2}:\\\\d{2}\\\\.\\\\d{3} B/g;\\n    const modifiedData = data\\n      .replace(pattern2, \\"\\")\\n      .replace(new RegExp(`(${pattern1})`, \\"g\\"), \\"\\\\n\\\\r$1\\")\\n      .replace(/\\\\s\\\\n\\\\s{2}/g, \\"\\");\\n\\n    // Write the modified content to output.txt\\n    file: fs.writeFile(outputFile, modifiedData, \\"utf8\\", (err) => {\\n      if (err) {\\n        console.error(\\"Error writing the output file:\\", err);\\n        return;\\n      }\\n      console.log(`File processed successfully. Check the output at ${outputFile}`);\\n    });\\n  });\\n}\\n\\n// Specify input and output file paths\\nconst inputFile = \\"beckhoff.log\\";\\nconst outputFile = \\"output.txt\\";\\n\\n// Process the file\\nprocessFile(inputFile, outputFile);\\n\\n```\\n\\nTo run the code make sure `beckhoff.log` is in the same folder and type in the terminal:\\n```\\nnode formatter.js\\n```\\nthis will run the app and generate a text file `output.txt` with formatted data\\n\\n\\n## Additional Explanation:\\n\\n***From ChatGPT:***\\n\\n The expression `\\\\n\\\\r$1` is commonly used in the context of a replace operation with regular expressions. Here\'s what it means:\\n\\n `\\\\n\\\\r`: This represents a combination of newline (\\\\n) and carriage return (\\\\r), which is often used to create a new line or start a new paragraph in some operating systems (like Windows).\\n\\n`\\\\n`: Newline character (moves the cursor to the next line).\\\\\\n`\\\\r`: Carriage return (moves the cursor to the beginning of the line).\\\\\\n`$1`: In regular expressions, $1 refers to the first captured group from a matching pattern.\\n\\n When you use parentheses () in a regular expression, whatever is matched inside those parentheses is stored as a \\"capture group.\\"\\n `$1` is a placeholder for the content of the first capturing group, i.e., whatever was matched by the first set of parentheses in the regex.\\n\\n const regex = /(\\\\d+)/g;\\n const str = \\"12345\\";\\n const result = str.replace(regex, \'\\\\n\\\\r$1\');\\n console.log(result);\\n\\n Explanation:\\n\\n Pattern `(\\\\d+)`: Captures one or more digits (e.g., 12345).\\n Replacement `\\\\n\\\\r$1`: Adds a newline and carriage return before the matched digits (which is captured as `$1`)."},{"id":"greetings","metadata":{"permalink":"/blog/greetings","source":"@site/blog/2024-09-18-greetings.md","title":"Greetings!","description":"Congratulations, you have made your first post!","date":"2024-09-18T00:00:00.000Z","tags":[{"inline":true,"label":"greetings","permalink":"/blog/tags/greetings"}],"readingTime":0.105,"hasTruncateMarker":false,"authors":[{"name":"Joel Marcey","title":"Co-creator of Docusaurus 1","url":"https://github.com/JoelMarcey","image_url":"https://github.com/JoelMarcey.png","imageURL":"https://github.com/JoelMarcey.png","socials":{},"key":null,"page":null},{"name":"S\xe9bastien Lorber","title":"Docusaurus maintainer","url":"https://sebastienlorber.com","image_url":"https://github.com/slorber.png","imageURL":"https://github.com/slorber.png","socials":{},"key":null,"page":null}],"frontMatter":{"slug":"greetings","title":"Greetings!","authors":[{"name":"Joel Marcey","title":"Co-creator of Docusaurus 1","url":"https://github.com/JoelMarcey","image_url":"https://github.com/JoelMarcey.png","imageURL":"https://github.com/JoelMarcey.png"},{"name":"S\xe9bastien Lorber","title":"Docusaurus maintainer","url":"https://sebastienlorber.com","image_url":"https://github.com/slorber.png","imageURL":"https://github.com/slorber.png"}],"tags":["greetings"]},"unlisted":false,"prevItem":{"title":"Regex MDbus LOG file with node.js","permalink":"/blog/regex"},"nextItem":{"title":"Welcome","permalink":"/blog/welcome"}},"content":"Congratulations, you have made your first post!\\n\\nFeel free to play around and edit this post as much as you like."},{"id":"welcome","metadata":{"permalink":"/blog/welcome","source":"@site/blog/2021-08-26-welcome/index.md","title":"Welcome","description":"Docusaurus blogging features are powered by the blog plugin.","date":"2021-08-26T00:00:00.000Z","tags":[{"inline":false,"label":"Facebook","permalink":"/blog/tags/facebook","description":"Facebook tag description"},{"inline":false,"label":"Hello","permalink":"/blog/tags/hello","description":"Hello tag description"},{"inline":false,"label":"Docusaurus","permalink":"/blog/tags/docusaurus","description":"Docusaurus tag description"}],"readingTime":0.465,"hasTruncateMarker":true,"authors":[],"frontMatter":{"slug":"welcome","title":"Welcome","tags":["facebook","hello","docusaurus"]},"unlisted":false,"prevItem":{"title":"Greetings!","permalink":"/blog/greetings"},"nextItem":{"title":"MDX Blog Post","permalink":"/blog/mdx-blog-post"}},"content":"[Docusaurus blogging features](https://docusaurus.io/docs/blog) are powered by the [blog plugin](https://docusaurus.io/docs/api/plugins/@docusaurus/plugin-content-blog).\\n\\nHere are a few tips you might find useful.\\n\\n\x3c!-- truncate --\x3e\\n\\nSimply add Markdown files (or folders) to the `blog` directory.\\n\\nRegular blog authors can be added to `authors.yml`.\\n\\nThe blog post date can be extracted from filenames, such as:\\n\\n- `2019-05-30-welcome.md`\\n- `2019-05-30-welcome/index.md`\\n\\nA blog post folder can be convenient to co-locate blog post images:\\n\\n![Docusaurus Plushie](./docusaurus-plushie-banner.jpeg)\\n\\nThe blog supports tags as well!\\n\\n**And if you don\'t want a blog**: just delete this directory, and use `blog: false` in your Docusaurus config."},{"id":"mdx-blog-post","metadata":{"permalink":"/blog/mdx-blog-post","source":"@site/blog/2021-08-01-mdx-blog-post.mdx","title":"MDX Blog Post","description":"Blog posts support Docusaurus Markdown features, such as MDX.","date":"2021-08-01T00:00:00.000Z","tags":[{"inline":false,"label":"Docusaurus","permalink":"/blog/tags/docusaurus","description":"Docusaurus tag description"}],"readingTime":0.235,"hasTruncateMarker":true,"authors":[],"frontMatter":{"slug":"mdx-blog-post","title":"MDX Blog Post","tags":["docusaurus"]},"unlisted":false,"prevItem":{"title":"Welcome","permalink":"/blog/welcome"},"nextItem":{"title":"Long Blog Post","permalink":"/blog/long-blog-post"}},"content":"Blog posts support [Docusaurus Markdown features](https://docusaurus.io/docs/markdown-features), such as [MDX](https://mdxjs.com/).\\n\\n:::tip\\n\\nUse the power of React to create interactive blog posts.\\n\\n:::\\n\\n{/* truncate */}\\n\\nFor example, use JSX to create an interactive button:\\n\\n```js\\n<button onClick={() => alert(\'button clicked!\')}>Click me!</button>\\n```\\n\\n<button onClick={() => alert(\'button clicked!\')}>Click me!</button>"},{"id":"long-blog-post","metadata":{"permalink":"/blog/long-blog-post","source":"@site/blog/2019-05-29-long-blog-post.md","title":"Long Blog Post","description":"This is the summary of a very long blog post,","date":"2019-05-29T00:00:00.000Z","tags":[{"inline":false,"label":"Hello","permalink":"/blog/tags/hello","description":"Hello tag description"},{"inline":false,"label":"Docusaurus","permalink":"/blog/tags/docusaurus","description":"Docusaurus tag description"}],"readingTime":2.06,"hasTruncateMarker":true,"authors":[],"frontMatter":{"slug":"long-blog-post","title":"Long Blog Post","tags":["hello","docusaurus"]},"unlisted":false,"prevItem":{"title":"MDX Blog Post","permalink":"/blog/mdx-blog-post"},"nextItem":{"title":"First Blog Post","permalink":"/blog/first-blog-post"}},"content":"This is the summary of a very long blog post,\\n\\nUse a `\x3c!--` `truncate` `--\x3e` comment to limit blog post size in the list view.\\n\\n\x3c!-- truncate --\x3e\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet"},{"id":"first-blog-post","metadata":{"permalink":"/blog/first-blog-post","source":"@site/blog/2019-05-28-first-blog-post.md","title":"First Blog Post","description":"Lorem ipsum dolor sit amet...","date":"2019-05-28T00:00:00.000Z","tags":[{"inline":false,"label":"Hola","permalink":"/blog/tags/hola","description":"Hola tag description"},{"inline":false,"label":"Docusaurus","permalink":"/blog/tags/docusaurus","description":"Docusaurus tag description"}],"readingTime":0.135,"hasTruncateMarker":true,"authors":[],"frontMatter":{"slug":"first-blog-post","title":"First Blog Post","tags":["hola","docusaurus"]},"unlisted":false,"prevItem":{"title":"Long Blog Post","permalink":"/blog/long-blog-post"}},"content":"Lorem ipsum dolor sit amet...\\n\\n\x3c!-- truncate --\x3e\\n\\n...consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet"}]}}')}}]);