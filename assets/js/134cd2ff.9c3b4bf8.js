"use strict";(self.webpackChunktaking_notes=self.webpackChunktaking_notes||[]).push([[2154],{3501:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"linux/alpine/Alpine","title":"Alpine linux and openRC","description":"General openRC commands","source":"@site/docs/linux/alpine/Alpine.mdx","sourceDirName":"linux/alpine","slug":"/linux/alpine/","permalink":"/docs/linux/alpine/","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"sidebar_label":"OpenRC services","displayed_sidebar":"linuxSidebar"},"sidebar":"linuxSidebar","previous":{"title":"Alpine","permalink":"/docs/category/alpine"},"next":{"title":"Environment variables","permalink":"/docs/linux/alpine/env"}}');var r=i(4848),t=i(8453);const a={sidebar_label:"OpenRC services",displayed_sidebar:"linuxSidebar"},c="Alpine linux and openRC",l={},d=[{value:"General openRC commands",id:"general-openrc-commands",level:2},{value:"Creating and Running a service",id:"creating-and-running-a-service",level:2},{value:"1.Create the service script:",id:"1create-the-service-script",level:3},{value:"2.Edit the service script",id:"2edit-the-service-script",level:3},{value:"3. Make sure it is executable",id:"3-make-sure-it-is-executable",level:3},{value:"4. Add the service to the default runlevel:",id:"4-add-the-service-to-the-default-runlevel",level:3},{value:"5. Start the service manually:",id:"5-start-the-service-manually",level:3},{value:"6. Check the status of the service:",id:"6-check-the-status-of-the-service",level:3},{value:"7. Stop the service:",id:"7-stop-the-service",level:3},{value:"8. Using environment variables in service scripts",id:"8-using-environment-variables-in-service-scripts",level:3},{value:"Adding environment variables",id:"adding-environment-variables",level:2},{value:"1. Temporarily Setting Environment Variables",id:"1-temporarily-setting-environment-variables",level:3},{value:"2. Permanently Adding Environment Variables",id:"2-permanently-adding-environment-variables",level:3},{value:"a. User-Specific (Bash Shell)",id:"a-user-specific-bash-shell",level:4},{value:"b. System-Wide Environment Variables",id:"b-system-wide-environment-variables",level:4},{value:"Alternatively, you can create a file under <code>/etc/profile.d/</code>, such as:",id:"alternatively-you-can-create-a-file-under-etcprofiled-such-as",level:5}];function o(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"alpine-linux-and-openrc",children:"Alpine linux and openRC"})}),"\n",(0,r.jsx)(n.h2,{id:"general-openrc-commands",children:"General openRC commands"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"rc-status"}),": Lists the status of services."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"rc-service <service> start"}),": Starts a service."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"rc-service <service> stop"}),": Stops a service."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"rc-service <service> restart"}),": Restarts a service."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"rc-service <service> status"}),": Checks the status of a service."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"rc-service <service> zap"}),": Resets a service's state."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"rc-update add <service> <runlevel>"}),": Adds a service to a runlevel."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"rc-update del <service> <runlevel>"}),": Removes a service from a runlevel."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"rc-update show"}),": Lists all services and their runlevels."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["For more detailed information, you can check the ",(0,r.jsx)(n.a,{href:"https://wiki.gentoo.org/wiki/OpenRC",children:"OpenRC Handbook"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"creating-and-running-a-service",children:"Creating and Running a service"}),"\n",(0,r.jsx)(n.h3,{id:"1create-the-service-script",children:"1.Create the service script:"}),"\n",(0,r.jsx)(n.p,{children:"OpenRC service scripts are located in /etc/init.d/. Each service needs its own script.\nCreate a new script for your service and make it executable:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'title="create service script"',children:"sudo touch /etc/init.d/myservice\nsudo chmod +x /etc/init.d/myservice\n"})}),"\n",(0,r.jsx)(n.h3,{id:"2edit-the-service-script",children:"2.Edit the service script"}),"\n",(0,r.jsx)(n.p,{children:"Edit the service script with your service's details:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'title="edit service script"',children:"sudo nano /etc/init.d/myservice\n"})}),"\n",(0,r.jsx)(n.p,{children:"Basic service script template:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'title="service script"',children:'#!/sbin/openrc-run\n\nname="remioWeb"\ndescription="Remio docs Web server"\n\ndirectory="/home/boris/remioWebDocs/remioWebDocs"\n\npidfile="/run/${RC_SVCNAME}.pid"\ncommand="/usr/bin/node"  # Path to your daemon or service executable\ncommand_args="/home/boris/remioWebDocs/remioWebDocs/node_modules/.bin/docusaurus serve --port 80 --host 0.0.0.0" # Arguments to pass to the command\n\n\n\ncommand_background="yes"\n\noutput_log="/var/log/remioWeb.log"\nerror_log="/var/log/remioWeb_error.log"\n\ndepend() {\n\n want net\n}\n'})}),"\n",(0,r.jsxs)(n.admonition,{type:"info",children:[(0,r.jsxs)(n.p,{children:["in this example we are using ",(0,r.jsx)(n.code,{children:"nodejs"})," and ",(0,r.jsx)(n.code,{children:"docusaurus"})," to serve the docs its like running: ",(0,r.jsx)(n.code,{children:"node /home/boris/remioWebDocs/remioWebDocs/node_modules/.bin/docusaurus serve --port 80 --host 0.0.0.0"})]}),(0,r.jsxs)(n.p,{children:["in general you will run: ",(0,r.jsx)(n.code,{children:"npm run serve -- --build --port 80 --host 0.0.0.0"})," if you are in the root of the project, but ",(0,r.jsx)(n.code,{children:"node"})," will be a child process of ",(0,r.jsx)(n.code,{children:"npm"})," and the ",(0,r.jsx)(n.code,{children:"openrc"})," will not be able to kill the process"]})]}),"\n",(0,r.jsx)(n.h3,{id:"3-make-sure-it-is-executable",children:"3. Make sure it is executable"}),"\n",(0,r.jsx)(n.p,{children:"After editing, ensure the script is executable:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'title="make executable"',children:"\nsudo chmod +x /etc/init.d/myservice\n"})}),"\n",(0,r.jsx)(n.h3,{id:"4-add-the-service-to-the-default-runlevel",children:"4. Add the service to the default runlevel:"}),"\n",(0,r.jsx)(n.p,{children:"To ensure the service starts automatically on boot, add it to the default runlevel:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'title="add to default runlevel"',children:"sudo rc-update add myservice default\n"})}),"\n",(0,r.jsx)(n.h3,{id:"5-start-the-service-manually",children:"5. Start the service manually:"}),"\n",(0,r.jsx)(n.p,{children:"You can start the service manually to test it:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'title="start service"',children:"sudo rc-service myservice start\n"})}),"\n",(0,r.jsx)(n.h3,{id:"6-check-the-status-of-the-service",children:"6. Check the status of the service:"}),"\n",(0,r.jsx)(n.p,{children:"To check if the service is running, use:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'title="check status"',children:"sudo rc-service myservice status\n"})}),"\n",(0,r.jsx)(n.h3,{id:"7-stop-the-service",children:"7. Stop the service:"}),"\n",(0,r.jsx)(n.p,{children:"To stop the service, use:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'title="stop service"',children:"sudo rc-service myservice stop\n"})}),"\n",(0,r.jsx)(n.h3,{id:"8-using-environment-variables-in-service-scripts",children:"8. Using environment variables in service scripts"}),"\n",(0,r.jsx)(n.p,{children:"Edit the script to include the necessary OpenRC headers and commands to start your service. Include the sourcing of environment variables:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'title="service script"',children:'\n#!/sbin/openrc-run\n\nname="My Service"\ndescription="This is my custom service"\ncommand="/path/to/your/executable"\ncommand_args=""\npidfile="/var/run/myservice.pid"\noutput_log="/var/log/myservice.log"\nerror_log="/var/log/myservice.err"\n\ndepend() {\n    need net\n}\n\nstart_pre() {\n    source /etc/myservice.env\n}\n'})}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"start_pre"})," function sources the environment variables from the specified file before starting the service. Otherwise the service will not have access to the environment variables."]})}),"\n",(0,r.jsxs)(n.p,{children:["Create a file to store your environment variables, for example, ",(0,r.jsx)(n.code,{children:"/etc/myservice.env"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'title="create env file"',children:'MY_VAR1="value1"\nMY_VAR2="value2"\nexport MY_VAR1 MY_VAR2\n'})}),"\n",(0,r.jsx)(n.h2,{id:"adding-environment-variables",children:"Adding environment variables"}),"\n",(0,r.jsx)(n.p,{children:"To add environment variables in Alpine Linux, you can set them temporarily for the current session or configure them permanently. Here are the steps for both methods:"}),"\n",(0,r.jsx)(n.h3,{id:"1-temporarily-setting-environment-variables",children:"1. Temporarily Setting Environment Variables"}),"\n",(0,r.jsx)(n.p,{children:"This method is useful for one-time settings that only need to exist for the duration of your session."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'export MY_VAR="value"\n'})}),"\n",(0,r.jsx)(n.p,{children:"To verify the variable:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"echo $MY_VAR\n"})}),"\n",(0,r.jsx)(n.p,{children:"To get all environment variables:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"printenv\n"})}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsx)(n.p,{children:"This will remain valid only for the duration of the current shell session."})}),"\n",(0,r.jsx)(n.h3,{id:"2-permanently-adding-environment-variables",children:"2. Permanently Adding Environment Variables"}),"\n",(0,r.jsx)(n.p,{children:"To make environment variables persistent across reboots or sessions, you can configure them in various ways depending on whether you want them for a specific user or system-wide."}),"\n",(0,r.jsx)(n.h4,{id:"a-user-specific-bash-shell",children:"a. User-Specific (Bash Shell)"}),"\n",(0,r.jsx)(n.h4,{id:"b-system-wide-environment-variables",children:"b. System-Wide Environment Variables"}),"\n",(0,r.jsx)(n.p,{children:"For system-wide environment variables (available for all users), you can add them to /etc/profile or create a new file in /etc/profile.d/."}),"\n",(0,r.jsxs)(n.p,{children:["Open ",(0,r.jsx)(n.code,{children:"/etc/profile"})," (or create a script in ",(0,r.jsx)(n.code,{children:"/etc/profile.d/"}),"):"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"sudo nano /etc/profile\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Add your environment variables ",(0,r.jsx)(n.strong,{children:"at the bottom:"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'export MY_VAR="value"\n'})}),"\n",(0,r.jsx)(n.p,{children:"Save and exit the file."}),"\n",(0,r.jsxs)(n.p,{children:["To apply the changes ",(0,r.jsx)(n.strong,{children:"without rebooting"}),", run:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"source /etc/profile\n"})}),"\n",(0,r.jsxs)(n.h5,{id:"alternatively-you-can-create-a-file-under-etcprofiled-such-as",children:["Alternatively, you can create a file under ",(0,r.jsx)(n.code,{children:"/etc/profile.d/"}),", such as:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"sudo nano /etc/profile.d/myenvvars.sh\n"})}),"\n",(0,r.jsx)(n.p,{children:"Inside this file, add:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'export MY_VAR="value"\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Then save and exit the file. And run ",(0,r.jsx)(n.code,{children:"source /etc/profile"})," to apply the changes."]}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:["I prefer the ",(0,r.jsx)(n.code,{children:"/etc/profile.d/"})," method because it keeps the ",(0,r.jsx)(n.code,{children:"/etc/profile"})," file clean and organized.\nAnd all custom variables are stored in separate files."]})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>c});var s=i(6540);const r={},t=s.createContext(r);function a(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);